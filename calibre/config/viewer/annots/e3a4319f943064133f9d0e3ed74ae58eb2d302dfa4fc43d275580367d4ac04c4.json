[{"pos": "epubcfi(/12/2/4/2[sbo-rt-content]/2/2[idm45584706216064]/30/2[idm45584707508800]/6/4/1:25)", "pos_type": "epubcfi", "timestamp": "2024-07-24T13:53:15.634022+00:00", "type": "last-read"}, {"end_cfi": "/2/4/2[sbo-rt-content]/2/2[idm45584706216064]/22/2[idm45584707387632]/6/4/2/1:90", "highlighted_text": "Later, you can refer back to it as a practical introductory TypeScript language reference.", "spine_index": 5, "spine_name": "OEBPS/preface01.xhtml", "start_cfi": "/2/4/2[sbo-rt-content]/2/2[idm45584706216064]/22/2[idm45584707387632]/6/4/2/1:0", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2024-07-24T13:38:25.856Z", "toc_family_titles": ["Preface", "Navigating This Book"], "type": "highlight", "uuid": "LEhLlolOd9wJls4OIkpaRA"}, {"end_cfi": "/2/4/2[sbo-rt-content]/2/2[idm45584706216064]/22/2[idm45584707387632]/10/2/2/2:83", "highlighted_text": " foundations of a type system ", "spine_index": 5, "spine_name": "OEBPS/preface01.xhtml", "start_cfi": "/2/4/2[sbo-rt-content]/2/2[idm45584706216064]/22/2[idm45584707387632]/10/2/2/2:64", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2024-07-24T13:38:41.578Z", "toc_family_titles": ["Preface", "Navigating This Book"], "type": "highlight", "uuid": "UF65IpmuzgcRdfAIdaefTQ"}, {"end_cfi": "/2/4/2[sbo-rt-content]/2/2[idm45584706216064]/18/2[idm45584707486752]/8/1:120", "highlighted_text": " closures/scope", "spine_index": 5, "spine_name": "OEBPS/preface01.xhtml", "start_cfi": "/2/4/2[sbo-rt-content]/2/2[idm45584706216064]/18/2[idm45584707486752]/8/1:105", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2024-07-24T13:39:12.535Z", "toc_family_titles": ["Preface", "Who Should Read This Book"], "type": "highlight", "uuid": "GDCw_fuyQHgYhws72kd5-g"}, {"end_cfi": "/2/4/2[sbo-rt-content]/2/2[idm45584706216064]/18/2[idm45584707486752]/10/2/2/2/1:10", "highlighted_text": "The history and context for why TypeScript is useful on top of “vanilla” JavaScript", "spine_index": 5, "spine_name": "OEBPS/preface01.xhtml", "start_cfi": "/2/4/2[sbo-rt-content]/2/2[idm45584706216064]/18/2[idm45584707486752]/10/2/2/1:0", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2024-07-24T13:39:23.510Z", "toc_family_titles": ["Preface", "Who Should Read This Book"], "type": "highlight", "uuid": "LLwucCV4ggrWMZ4dB871GQ"}, {"end_cfi": "/2/4/2[sbo-rt-content]/2/2[idm45584706216064]/18/2[idm45584707486752]/10/4/2/1:29", "highlighted_text": "How a type system models code", "spine_index": 5, "spine_name": "OEBPS/preface01.xhtml", "start_cfi": "/2/4/2[sbo-rt-content]/2/2[idm45584706216064]/18/2[idm45584707486752]/10/4/2/1:0", "style": {"kind": "color", "type": "builtin", "which": "red"}, "timestamp": "2024-07-24T13:39:31.208Z", "toc_family_titles": ["Preface", "Who Should Read This Book"], "type": "highlight", "uuid": "JQxSqBIom01IutumPfnH7A"}, {"end_cfi": "/2/4/2[sbo-rt-content]/2/2[idm45584706216064]/18/2[idm45584707486752]/10/6/2/1:32", "highlighted_text": "How a type checker analyzes code", "spine_index": 5, "spine_name": "OEBPS/preface01.xhtml", "start_cfi": "/2/4/2[sbo-rt-content]/2/2[idm45584706216064]/18/2[idm45584707486752]/10/6/2/1:0", "style": {"kind": "color", "type": "builtin", "which": "green"}, "timestamp": "2024-07-24T13:39:34.279Z", "toc_family_titles": ["Preface", "Who Should Read This Book"], "type": "highlight", "uuid": "PL49ThawcY2LecXZ-z6Ang"}, {"end_cfi": "/2/4/2[sbo-rt-content]/2/2[idm45584706216064]/18/2[idm45584707486752]/14/6/2/1:89", "highlighted_text": "Represent moderately complex types using TypeScript’s built-in inferences and new syntax.", "spine_index": 5, "spine_name": "OEBPS/preface01.xhtml", "start_cfi": "/2/4/2[sbo-rt-content]/2/2[idm45584706216064]/18/2[idm45584707486752]/14/6/2/1:0", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2024-07-24T13:39:53.114Z", "toc_family_titles": ["Preface", "Who Should Read This Book"], "type": "highlight", "uuid": "b5FDyEtXeN3HxV9uYS3oBw"}, {"end_cfi": "/2/4/2[sbo-rt-content]/2/2[from_javascript_to_typescript]/8/2[idm45584704837952]/4/1:70", "highlighted_text": " by Brendan Eich at Netscape in 1995", "spine_index": 7, "spine_name": "OEBPS/ch01.xhtml", "start_cfi": "/2/4/2[sbo-rt-content]/2/2[from_javascript_to_typescript]/8/2[idm45584704837952]/4/1:34", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2024-07-24T13:41:18.916Z", "toc_family_titles": ["1. From JavaScript to TypeScript", "History of JavaScript"], "type": "highlight", "uuid": "xeQvXNIWQ1eprBSIWhzpZA"}, {"end_cfi": "/2/4/2[sbo-rt-content]/2/2[from_javascript_to_typescript]/8/2[idm45584704837952]/8/1:221", "highlighted_text": "Today, JavaScript is a wonderfully flexible language with a lot of strengths. One should appreciate that while JavaScript has its quirks, it’s also helped enable the incredible growth of web applications and the internet.", "spine_index": 7, "spine_name": "OEBPS/ch01.xhtml", "start_cfi": "/2/4/2[sbo-rt-content]/2/2[from_javascript_to_typescript]/8/2[idm45584704837952]/8/1:0", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2024-07-24T13:41:49.035Z", "toc_family_titles": ["1. From JavaScript to TypeScript", "History of JavaScript"], "type": "highlight", "uuid": "zvaojS-c8yz-_2O1ReKrqw"}, {"end_cfi": "/2/4/2[sbo-rt-content]/2/2[from_javascript_to_typescript]/8/2[idm45584704837952]/10/2/1:84", "highlighted_text": "Show me the perfect programming language and I’ll show you a language with no users.", "spine_index": 7, "spine_name": "OEBPS/ch01.xhtml", "start_cfi": "/2/4/2[sbo-rt-content]/2/2[from_javascript_to_typescript]/8/2[idm45584704837952]/10/2/1:0", "style": {"dark": "#cccc00", "friendly_name": "teal", "kind": "color", "light": "#00ffff", "type": "custom"}, "timestamp": "2024-07-24T13:42:21.383Z", "toc_family_titles": ["1. From JavaScript to TypeScript", "History of JavaScript"], "type": "highlight", "uuid": "_Q40PIeuGgOgF9Kb7Y5ZpQ"}, {"end_cfi": "/2/4/2[sbo-rt-content]/2/2[from_javascript_to_typescript]/10/2[idm45584704828160]/4/1:112", "highlighted_text": "vanilla", "spine_index": 7, "spine_name": "OEBPS/ch01.xhtml", "start_cfi": "/2/4/2[sbo-rt-content]/2/2[from_javascript_to_typescript]/10/2[idm45584704828160]/4/1:105", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2024-07-24T13:42:28.355Z", "toc_family_titles": ["1. From JavaScript to TypeScript", "Vanilla JavaScript’s Pitfalls"], "type": "highlight", "uuid": "3kuBioKzSuh3iaxR6B46Tw"}, {"end_cfi": "/2/4/2[sbo-rt-content]/2/2[from_javascript_to_typescript]/10/2[idm45584704828160]/6/2[idm45584707500000]/12/1:94", "highlighted_text": "Even if those assumptions are correct, though, later changes to the code may invalidate them. ", "spine_index": 7, "spine_name": "OEBPS/ch01.xhtml", "start_cfi": "/2/4/2[sbo-rt-content]/2/2[from_javascript_to_typescript]/10/2[idm45584704828160]/6/2[idm45584707500000]/12/1:0", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2024-07-24T13:43:24.968Z", "toc_family_titles": ["1. From JavaScript to TypeScript", "Vanilla JavaScript’s Pitfalls", "Costly Freedom"], "type": "highlight", "uuid": "BxRkI9sHI_OO5-6WFRBSrQ"}, {"end_cfi": "/2/4/2[sbo-rt-content]/2/2[from_javascript_to_typescript]/10/2[idm45584704828160]/6/2[idm45584707500000]/16/1:111", "highlighted_text": "Perhaps painting is changed from a string to some other data type, or maybe one or more of the painter’s methods are renamed.\n\nOther languages might refuse to let you run code if their compiler determines it would likely crash. Not so with dynamically typed languages—those that run code without checking if it will likely crash first—such as JavaScript.\n\nThe freedom of code that makes JavaScript so fun becomes a real pain when you want safety in running your code.", "spine_index": 7, "spine_name": "OEBPS/ch01.xhtml", "start_cfi": "/2/4/2[sbo-rt-content]/2/2[from_javascript_to_typescript]/10/2[idm45584704828160]/6/2[idm45584707500000]/12/1:94", "style": {"dark": "#cccc00", "friendly_name": "teal", "kind": "color", "light": "#00ffff", "type": "custom"}, "timestamp": "2024-07-24T13:43:38.138Z", "toc_family_titles": ["1. From JavaScript to TypeScript", "Vanilla JavaScript’s Pitfalls", "Costly Freedom"], "type": "highlight", "uuid": "tCiHXBz6NcpntakCB55uOQ"}, {"end_cfi": "/2/4/2[sbo-rt-content]/2/2[from_javascript_to_typescript]/12/2[idm45584707268144]/8/2/1:20", "highlighted_text": "Programming language", "spine_index": 7, "spine_name": "OEBPS/ch01.xhtml", "start_cfi": "/2/4/2[sbo-rt-content]/2/2[from_javascript_to_typescript]/12/2[idm45584707268144]/8/2/1:0", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2024-07-24T13:45:21.078Z", "toc_family_titles": ["1. From JavaScript to TypeScript", "TypeScript!"], "type": "highlight", "uuid": "66SwpyBhOxkuJkqDl9LXYg"}]